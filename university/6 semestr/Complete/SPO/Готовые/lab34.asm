.model small
.stack 100h
.data
	storage	db	10 dup (?)

	I_dep0	equ	20h	; препывание от таймера
	I_dep1	equ	21h	; препывание от клавиатуры
	ICW1	equ	00010001b ; Interrupt Control Word инициализации
	ICW2	equ	88h ; Базовый вектор для контроллера прерываний
	ICD2	equ	8h ;  Базовый вектор для контроллера прерываний
			; (по умолчанию)
	ICW3	equ	00000100b ; указывает, к каким разрядам ведущего
			; контроллера подключены ведомые.
	ICW4	equ	00000001b ; последнее слово инициализации
	smesh_1	equ	220h ; Смещение обработчика для таймера
	smesh_2	equ	190h ; Смещение обработчика для клавиатуры
.code
start:
	mov	ax, @data
	mov	ds, ax

; Инициализация Master блока контроллера прерываний 

	cli			; Запрет прерываний
	
	mov	al, ICW1
	out	I_dep0, al	; Загрузка управляющего слова
	jmp	$+2		; делаем маленькую задержку

	mov	al, ICW2	; Вывод в контроллер перываний базового векто-
	out	I_dep1, al	; ра прерывания.
	jmp	$+2		; делаем маленькую задержку

	mov	al, ICW3	; Вывод в контроллер разрядов подключения
	out	I_dep1, al	; каскадируемых контроллеров
	jmp	$+2		; делаем маленькую задержку

	mov	al, ICW4	; Вывод в контроллер последнего управляющего
	out	I_dep1, al	; слова.
	jmp	$+2		; делаем маленькую задержку



; Маскирование прерывания от таймера (OCW1)

	in	al, I_dep1
	or	al, 00000001b
	out	I_dep1, al		

; Установка векторов прерываний для подпрограмм N1 и N2
	push	es		; запомнить es
	xor	ax, ax
	mov	es, ax		; обнулить es

	mov	es:[4*ICW2], smesh_1 ; Заносим смещение обработчика
	mov	es:[4*ICW2+2], cs   ;Заносим сегментную часть адреса обработчика

	mov	es:[4*ICW2+4], smesh_2 ; Заносим смещение обработчика
	mov	es:[4*ICW2+6],cs   ;Заносим сегментную часть адреса обработчика

	pop	es		;восстановить es

	sti			; разрешение прерываний

; основная программа
	mov	si, offset storage	; зaгpyзкa aдpeca для зaпиcи cкaн кoдa
	hlt			; выxoд из cocтoяния ocтaнoвa пocлe нaжaтия
	hlt			; любoй из клaвиш
	mov	cx, 200h	; cчeтчик чиcлa пpepывaний
	mov	di, 340h	; сброс маски для прерывания от таймера 
	in	al, I_dep1
	and	al, 11111100b	;разрешим прерывания от клавиатуры и от таймера
	out	I_dep1, al
	jmp	$+2		; небольшая задержка
             					
main_loop:
	hlt			; выxoд из cocтoяния ocтaнoвa пo пpepывaнию
	loop	main_loop	; oт тaймepa или oт клaвиaтypы

	cli			; запрещение прерываний

; Реинициализация Master блока контроллера прерываний 
; Все настройки по умолчанию

	mov	al, ICW1
	out	I_dep0, al	; Загрузка управляющего слова
	jmp	$+2		; делаем маленькую задержку
	mov	al, ICD2	; Вывод в контроллер перываний базового векто-
	out	I_dep1, al	; ра прерывания поумолчанию.
	jmp	$+2		; делаем маленькую задержку
	mov	al, ICW3	; Вывод в контроллер разрядов подключения
	out	I_dep1, al	; каскадируемых контроллеров
	jmp	$+2		; делаем маленькую задержку
	mov	al, ICW4	; Вывод в контроллер последнего управляющего
	out	I_dep1, al	; слова.
	jmp	$+2		; делаем маленькую задержку

	sti

	mov	ax, 4c00h	; выход
	int	21h

; Обработчик прерываний от сигналов таймера 0.
; При выполнении программы осуществляется вывод на экран дисплея SCAN кода

org  smesh_1

	push	ax
	dec	si
	mov	ax, 0b800h	; Начало видеопамяти для CGA, EGA, VGA в тексто-
				; вом режиме 80x25 (монохромный дисплей - b000h)
	mov	es, ax
	mov	al, [si]
	mov	ah, 75h		; загрузка атрибута отображаемого знака -
				; 			
	mov	es:[di], ax
	sub	di, 2
	inc	si
	; очищаем регистр обслуживания прерываний
	mov	al, 20h
	out	20h, al
	pop	ax
iret

; Обработчик нажатия клавиши
org  smesh_2

	push	ax
	in	al, 60h		; ввод scan кода;
	test	al, 80h		; анализ нажатия или отжатия 10000000;
	jnz	m2		; переход, если клавиша отжата
	mov	[si], al	; сохранение scan кода в памяти, чтоб потом его увидел обработчик таймера
	inc	si

m2:	in	al, 61h		; сброс триггера
	or	al, 80h		; 80 - 10000000
	out	61h, al		; установка разряда pb7 в "1"
	and	al, 7fh		; 7f - 01111111
	out	61h, al		; сброс разряда pb7 в "0"
	; очищаем регистр обслуживания прерываний
	mov	al, 20h		; 
	out	20h, al		; посылка контроллеру прерываний сигнала
				; End-Of-Interrupt (чтоб из регистра обслуживания прерываний убрать единичку)
	pop	ax
iret

end start		
