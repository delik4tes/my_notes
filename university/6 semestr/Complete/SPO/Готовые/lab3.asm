; Женюх Александр А-07-19
; Вариант 6
; Задан двумерный массив двухбайтовых целых чисел без знака. 
; Определить максимальное значение элементов массива и его индексы.

.model small		      ; один сегмент кода, данных и стека
.stack 100h			      ; отвести под стек 256 байт
.data			          ; начало сегмента данных
    M equ 4               ; число строк массива
    N equ 3               ; число столбцов массива
    T equ M * N           ; число элементов в массиве 
  
    mas dw 210, 225, 332  ; задаем элементы массива
        dw 211, 2200, 4
        dw 2, 122, 7
        dw 80, 11182, 50    

    s db 'position: $' 
    num db ' number: $'
 
.code                     ; начало сегмента кода
start:                    
    mov ax, @data 
    mov ds, ax            ; настройка DS на начало сегмента данных

    mov ah, 9             ; номер функции DOS
    mov dx, offset s      ; DS :  DX < - адрес строки S
    int 21h               ; Вывод строки на экран в текущей позиции курсора

; инициализация некоторых регистров
    xor ax, ax            ; обнуляем регистр ax
    mov cx, T-1           ; настраиваем счетчик на T-1 повторений (начиная со второго элемента массива)
    xor di, di            ; обнуляем di - указатель на 1-й элемент, принятый за начальный максимум   
    mov si, 2             ; регистр si будет указывать на текущий элемент (адрес 2-го эл-та это 2)

; поиск максимального элемента
maximum:
    mov ax, mas[si]       ; для операции сравнения запоминаем текущий элемент
    mov bx, mas[di]
    cmp ax, bx            ; сравниваем текущий элемент с максимумом    
    jbe next              ; если текущий элемент меньше или равен максимуму, то переходим к метке next
    mov di, si            ; если текущий элемент больше, то сохраняем его индекс как максимального
    next: 
    add si, 2             ; переходим к следующему элементу массива
    loop maximum

; рассчет индекса строки и столбца
    xor bx, bx
    mov ax, di
    mov dl, 2
    div dl                ; результат деления в al
    mov ah, 0             ; заносим значение младшего байта делимого
    mov bl, N             ; заносим значение делителя (число столбцов) 
    div bl                ; деление ax/bl = al(частное - строки); ah(остаток - столбцы) 

; вывод индекса макс. элемента и его значение
    add al, 30h           ; коррекция ASCII
    inc al                ; увеличиваем на 1 для представления индексов с 1
    int 29h               ; вывод индекса строки

    mov al,' '            ; заносим в al пробел для разделения
    int 29h               ; выводим пробел для разделения

    mov al,ah             ; заносим в al значение ah
    add al,30h            ; коррекция ASCII
    inc al                ; увеличиваем на 1 для представления индексов с 1
    int 29h               ; вывод индекса столбца

    mov ah, 9             ; номер функции DOS
    mov dx, offset num    ; DS :  DX < - адрес строки S
    int 21h               ; Вывод строки на экран в текущей позиции курсора

    call Output

; выход из программы
    mov ah,4ch 
    int 21h 

; вывод числа
    Output proc		
        mov dx, mas[di]
        xor ax, ax			; обнуляем регистр ax
        mov ax, dx 			; загружаем в ax число для вывода
        xor dx, dx			; обнуляем регистр dx
        mov bx, 10000d 		; находим число десятков тысяч
        div bx
        mov cx, dx		    ; остаток после деления переносим в cx
        mov dx, ax		    ; целую часть переносим в dx 
        call PrintDigit 	; выводим ее
        
        xor ax, ax			; обнуляем регистр ax
        mov ax, cx  		; загружаем в ax остаток от прошлой операции
        xor dx, dx			; обнуляем регистр dx
        mov bx, 1000d 		; находим число тысяч
        div bx
        mov cx, dx		    ; остаток после деления переносим в cx
        mov dx, ax	     	; целую часть переносим в dx 
        call PrintDigit 	; выводим ее

        xor ax, ax			; обнуляем регистр ax
        mov ax, cx 			; загружаем в al число для вывода
        xor dx, dx			; обнуляем регистр dx
        mov bx, 100d 		; находим число сотен
        div bx
        mov cx, dx		    ; остаток после деления переносим в cx
        mov dx, ax		    ; целую часть переносим в dx       
        call PrintDigit 	; выводим ее
        
        xor ax, ax			; обнуляем регистр ax
        mov al, cl  		; загружаем в al остаток от прошлой операции
        mov dl, 10d			; находим число десятков
        div dl 
        mov cl, ah		    ; остаток после деления переносим в cl
        mov dl, al		    ; целую часть переносим в dl
        call PrintDigit 	; выводим ее
        
        mov dl, cl
        call PrintDigit 	; выводим единицы
        ret
    endp

    PrintDigit proc			    ; печать цифры
	; цифра для вывода - в dl
		add dl, 30h	            ; коррекция ASCII
		mov ah, 02h			    ; выводим символ
		int 21h
		ret
	endp

    end start