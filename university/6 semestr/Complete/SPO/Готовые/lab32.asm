.8086
.model small
.data	
	freqs dw 175,196, 208,175,208,262,233, 208,196,175,156,156, 208,208,233,311,277,262, 65535
	times db 1,1, 2,2,2,1,1, 1,1,4,1,1, 2,2,2,1,1, 6, 0; длительность нот
	tempo db 220; takt

        autor db 'melodija - "Po dolinam i po vzgoriam"$'

.stack 100h ;glubina steka
.code


begin:
        mov ax,@data    ;сохранение адреса данных программы
        mov ds,ax       ;его сохранение в регистр адреса данных
        mov al,10110110b;установка режима работы таймера - двоичный счетчик
        out 43h,al      ;с последовательной загрузкой байтов делителя частоты
        

        lea bx, times   ;находим адрес начала массива времен и сохраняем его в стеке
        push bx
        lea bx, freqs   ;находим адрес начала массива частот и сохраняем его в стеке
        push bx
play:
        pop bx          ;выбираем из стека указатель на элемент массива частот
        mov ax, [bx]    ;выбираем частоту
        cmp ax, 65535   ;сравниваем на предмет конца массива
        jz endplay      ;при удаче - выходим
        call koef       ;иначе - загружаем частоту, динамик воспроизводит
        in al,61h       ;включение динамика
        or al,3         ;установка битов включения динамика
        out 61h,al      ;установка управляющих сигналов динамика
	mov cx, bx      ;сохраним указатель частоты
        pop bx          ;выбираем из стека указатель на элемент массива частот
        mov al, [bx]    ;загружаем число четвертей
        inc bx          ;увеличиваем указатель числа четвертей на 1
        push bx         ;заносим в стек
        add cx, 2       ;увеличиваем указатель на частоту на 2
        push cx         ;заносим в стек
        mul [tempo]     ;умножив на длительность четверти - получим длину ноты в АХ
        call timer      ;организуем задержку
        in al,61h       ;выключение динамика
        and al,11111100b
        out 61h,al
	jmp play        ;перейдем к началу воспроизведения следующей ноты


endplay:     
        mov dx, offset autor
        mov ah, 9
        int 21h
        mov ah, 8
        int 21h
        mov ah,4ch      ;завершаем работу
        int 21h




timer proc              ;процедура-задержка - исходные данные ax - задержка в мс(кратная 55мс)
        cli             ;запрет прерываний
        mov bh, 55      ;введем длительность одного цикла опроса
        div bh          ;разделим, получим в al частное - число отслеживаний
        mov bl, al      ;переместим число отслеживаний, инт21 портит регистр ах
        mov ah, 0       ;получим время
        int 1ah
        add bl, dl      ;добавим к чилсу отслеживаний - младшую часть "времени"

 timesearch:
        mov ah, 0       ;получим время еще раз
        int 1ah
        cmp dl, bl      ;сравним отсчет("время") с полученным числом отсчетов
        jz timend       ;если отсчет произошел, выходим из отслеживания
        jmp timesearch  ;иначе продолжим отслеживать
 timend:
        sti             ;разрешим прерывания
ret                     ;вернемся в программу
endp

koef proc               ;процедура - вычислитель коэффициента деления частоты с занесением его в регистр таймера
        mov di, ax
        mov dx, 12h     ;десятичному числу 1190000  соответствует
        mov ax, 2870h	;шестнадцатеричное число 122870h
        div di          ;делим, частное - в АХ
        out 42h,al      ;выводим младший байт
        mov al, ah      ;готовим старший к выводу
        out 42h,al      ;выводим старший байт
ret
endp

end begin
